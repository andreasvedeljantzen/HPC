#include <stdio.h>
#include <stdlib.h>
#include "mandel.h"
#include "writepng.h"
#include <omp.h>



int main(int argc, char *argv[]) {

    int warmup = 10;
    int   *d_warmup;
    cudaMalloc((void**)&d_warmup, warmup);
    cudaFree(d_warmup);

    int   width, height;
    int	  max_iter;
    int   *d_image;
    int *h_image;
    int size_p;

    width    = 2601;
    height   = 2601;
    max_iter = 400; 

    // command line argument sets the dimensions of the image
    if ( argc == 2 ) width = height = atoi(argv[1]);
    
    size_p = width * height * sizeof(int);

    cudaMalloc((void**)&d_image, size_p);
    cudaMallocHost((void**)&h_image, size_p);
  
    const int device = 0;
    cudaSetDevice(device);

    int block = 16;
    dim3 Block_size(block,block);//threads per block
    dim3 Grid_size(width / Block_size.x,height / Block_size.y);

    double time = omp_get_wtime();

    mandel<<<Grid_size,Block_size>>>(width, height, d_image, max_iter, block);

    cudaDeviceSynchronize();
    double elapsed = omp_get_wtime()-time;

    cudaMemcpy(h_image,d_image, size_p, cudaMemcpyDeviceToHost);

    writepng("mandelbrot.png", h_image, width, height);

    cudaFreeHost(h_image);
    cudaFree(d_image);

    printf("The runtime is %g \n",elapsed);

    return(0);
}
