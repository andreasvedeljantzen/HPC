<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- saved from url=(0014)about:internet -->
<html xmlns:MSHelp="http://www.microsoft.com/MSHelp/" lang="en-us" xml:lang="en-us"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<meta name="DC.Type" content="topic">
<meta name="DC.Title" content="Building the Intel&reg; Cilk&#8482; Plus Version">
<meta name="DC.Relation" scheme="URI" content="GUID-08A02E1B-9BA2-4127-A95B-1C0E1F0B127B.htm">
<meta name="DC.Relation" scheme="URI" content="http://www.intel.com/software/products/softwaredocs_feedback">
<meta name="DC.Format" content="XHTML">
<meta name="DC.Identifier" content="GUID-6F76508A-5006-481E-BE5D-03083E04BC88">
<meta name="DC.Language" content="en-US">
<link rel="stylesheet" type="text/css" href="intel_css_styles.css">
<title>Building the Intel&reg; Cilk&#8482; Plus Version</title>
<script src="resources/prism/prism.js"><!----></script>
<link href="resources/prism/prism.css" rel="stylesheet">
</head>
<body id="GUID-6F76508A-5006-481E-BE5D-03083E04BC88">
 <!-- ==============(Start:NavScript)================= -->
 <script src="NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
 <script language="JavaScript1.2" type="text/javascript">WriteNavLink(0);</script>
 <!-- ==============(End:NavScript)================= -->


 
  <h1 class="topictitle1">Building the Intel&reg; Cilk&#8482; Plus
    Version</h1>
 
  <div id="GUID-F0F51325-0475-4F40-8CB7-C36725B61634"> 
    <p>To build the Intel&reg; Cilk&#8482; Plus version, you will modify the sample
      application to use Intel&reg; Cilk&#8482; Plus and then compile the modified code. You
      will then run the application and then compare the time with the baseline
      performance time. 
    </p>
 
    <ol id="GUID-3F0FFA43-FB36-4AA4-A90B-9382743FD089"> 
      <li id="GUID-34DFCFED-3680-4736-A8E8-A95F04009719"> 
        <p>Remove all of the files that were created when you build the serial
          version by running the following command: 
        </p>
 
        <p> 
          <span class="filepath">%make clean</span> 
        </p>
 
      </li>
 
      <li id="GUID-5F5A522F-34A0-4426-A825-A036F02E2293"> 
        <p id="GUID-F64602BE-0EEB-4140-B8EB-6F246F92E4C3">Open the source file 
          <span class="filepath">src/build_with_cilk/build_with_cilk.cpp</span>. 
        </p>
 
      </li>
 
      <li id="GUID-A83028F1-55B8-4588-AF1B-2C4E8FE40B2C"> 
        <p id="GUID-7B01DDC0-B271-43A7-A9D1-C56C2B1B88E0">Remove the comment marks from
          the Intel&reg; Cilk&#8482; Plus header files to use the Intel&reg; Cilk&#8482; Plus keywords. 
        </p>
 
      </li>
 
      <li id="GUID-ABB0A7E6-079E-4C2E-9C7B-1B22354318D3"> 
        <p id="GUID-4E0D1487-7EC6-485F-B258-45022F5752E1">Remove the comment marks from
          the 
          <samp class="codeph" id="GUID-7AD5047F-B9C5-45DD-B584-ACD3D93EA6DF">parallel_thread()</samp>
          function related to Intel&reg; Cilk&#8482; Plus implementation. Note the differences in
          this function and the serial 
          <samp class="codeph" id="GUID-AF01688F-A5B1-46EA-9F64-68F0E047F62A">parallel_thread()</samp>
          function. The 
          <span class="keyword">for</span> keyword is replaced with the 
          <span class="keyword">cilk_for</span> keyword to parallelize the for loop
          without needing to change most of the rest of the loop. We also no longer check
          for the validity of 
          <samp class="codeph">video-&gt;next_frame</samp>. Exiting a loop in the middle
          of a parallelized loop is not permitted. And the iterations we save from this
          check will be distributed.
        </p>
 
      </li>
 
      <li id="GUID-8CEDA0C7-F4D8-4012-A47C-A6543E4AC3E7"> 
        <p id="GUID-906E8E9D-9294-476B-82F7-7AE305D5A665">Add comment marks the serial 
          <samp class="codeph">parallel_thread()</samp>
          function since the Intel&reg; Cilk&#8482; Plus version of the 
          <samp class="codeph">parallel_thread()</samp>
          function replaces this function. 
        </p>
 
      </li>
 
      <li id="GUID-366F8E08-F05C-4E13-AFC9-A95088F49C72"> 
        <p>Build the sample by running the following command: 
        </p>
 
        <p><span class="filepath">%make cilk</span> 
        </p>
 
      </li>
 
      <li id="GUID-9F34404F-44BC-4027-B70A-583186C3CF24"> 
        <p id="GUID-10380FC5-0417-4AC3-9AAC-8D82FB12033D">Run the sample application. 
        </p>
 
      </li>
 
    </ol>
 
    <p>Compare the time to render the image to the baseline
      performance time. 
    </p>
 
    <p> If you want to change the number of threads available to Intel&reg; Cilk&#8482;
      Plus, you can set an environment variable 
      <span class="keyword">CILK_NWORKERS</span> to the number of threads. You can also
      use a runtime function 
      <samp class="codeph">__cilkrts_set_param("nworkers", "N")</samp> where 
      <samp class="codeph">N</samp> is a string with the number of threads. You must call
      this runtime function before the first call to a 
      <samp class="codeph">cilk_spawn()</samp> or 
      <samp class="codeph">cilk_for()</samp> function. Note that while this sets the
      maximum number of threads that will be used to run Intel&reg; Cilk&#8482; Plus code in
      parallel, the Intel&reg; Cilk&#8482; Plus runtime by design will only use threads that
      find enough work to steal. Very small workloads may only see one thread being
      used. 
    </p>
 
    <p>This step is the last step in the tutorial. 
    </p>
 
  </div>
 
  
<div class="familylinks">
<div class="parentlink"><strong>Parent topic:</strong>&nbsp;<a href="GUID-08A02E1B-9BA2-4127-A95B-1C0E1F0B127B.htm">Tutorial: Linux* Version</a></div>
</div>
<div></div> 

</body>
</html>
