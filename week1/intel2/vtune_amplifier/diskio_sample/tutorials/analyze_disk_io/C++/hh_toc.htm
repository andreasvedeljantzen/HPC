<!DOCTYPE HTML>
<!-- !DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN" -->

<!-- 
//*==============================================================================  
//*    ** DO NOT REMOVE OR MODIFY THIS COPYRIGHT MESSAGE **                        
//*                                                                                
//*    Document generated by FAR HTML 5
//*    Copyright (c) 2004-2016 The Helpware Group
//*    http://helpwaregroup.com/
//*    WARNING: You must purchase a copy of FAR HTML v4 or greater to publish this file.
//*
//*==============================================================================
-->
<!-- saved from url=(0014)about:internet -->
<html>
<head>

  <title>Contents</title>
  <link rel="stylesheet" type="text/css" href="tree.css">
  <script src="tree.js" type="text/javascript">
  </script>

  <script type="text/javascript">
  <!--
  var _DefaultPage_ = "GUID-A54708E1-EAD3-4A36-978E-383ED7BD97E8.html";
  var RightFrameFound_AtLeastOnce = false;
  

  if (parent.location.href == self.location.href)
    window.location.href = "index.htm";

  function RightFrameFound() {  //Check no security blocks or missing right frame
    try {
      if ((top.right.location !== null) && (top.right.location !== undefined) 
      && (typeof(top.right.location.href) == "string") && (top.right.location.href !== "") 
      && (top.right.document !== null) && (top.right.document !== undefined)) { 
        return true;
        RightFrameFound_AtLeastOnce = true;
      }
      else 
        return false;
    }
    catch(err) { return false; }
  }

  function GetRightPage() {
    if (RightFrameFound())
       return top.right.location.href; 
    else if (typeof(sessionStorage) !== "undefined") {   // HTML5 localStorage available?
      if (!RightFrameFound_AtLeastOnce) {
        var rightPath = sessionStorage.getItem("hw_rightPath");  // item set by NavScript.js
        if (rightPath !== null && rightPath !== "")
          return rightPath;
      }
    }
    return("");
  }
      
  function CloseNav() {
    var rightPage = GetRightPage();   
    if (rightPage !== "")
       top.location.href = rightPage;
    else if (treeSelected == null) // nothing selected
       top.location.href = _DefaultPage_;
    else { // use the toc selection
       var el = findLinkNode();
       if (el !== null && el !== undefined)
         top.location.href = el.getAttribute('href');
       else 
         top.location.href = _DefaultPage_;
    }
  }

  function SyncDocUrl(showError) { 
    var rightPage = GetRightPage();   
    if (rightPage === "" && showError) 
      alert("Operation failed!\n\nCross frame communication is blocked. Please check your browser security settings or try another browser."); 
    return rightPage; 
  } 
  
  // RWC: 2007-06-24 - Get absolute URL to current page
  
  function TrimURL(aref)  //Strip off leading protocol http:///
  {
    sRet = aref;
    if ((sRet.substring(0, 7) == "http://") || (sRet.substring(0, 7) == "file://"))
     	sRet = sRet.substring(7, sRet.length);
    if (sRet.substring(0, 8) == "https://")
     	sRet = sRet.substring(8, sRet.length);
    if (sRet.substring(0, 1) == "/")
     	sRet = sRet.substring(1, sRet.length);
    //Scrub embedded codes
    sRet = unescape(sRet);  //Converts %2520 -> %20  (under FireFox)
    sRet = unescape(sRet);  //Converts %20 = " "
    //all Unix slashes /
    sRet = sRet.replace(/\\/g, "/");
    return sRet;
  }

  //RWC New
  function GetTopPage()
  {
    var topURL = "";  
    if (RightFrameFound())
       topURL = top.location.href;
       
    if (topURL == "")
    {
      if (typeof(sessionStorage) !== "undefined") {  // is HTML5 localStorage available?
        topURL = sessionStorage.getItem("hw_topPath");  //retrieve item set by parent page
        if (topURL === null)
          topURL = ""; 
      }
    }

    var i = topURL.indexOf("#");  // trim off any bookmark
    if (i > 0)
      topURL = topURL.substr(0, i);
    var fileName = topURL.substr(topURL.lastIndexOf("/") + 1, topURL.length);   // "http://c:/base/start.htm" --> "start.htm"
    return fileName;
  }

  function ExpandFilename(fileName)
  {
    if (fileName == "") 
      return "";

    if (fileName.toLowerCase().indexOf("http:") == 0 || fileName.toLowerCase().indexOf("https:") == 0)
      return(fileName);

    var topURL;  
    if (RightFrameFound())
      topURL = top.location.href;
    else 
      topURL = location.href;
    var i = topURL.indexOf("#");  // trim off any bookmark
    if (i > 0)
      topURL = topURL.substr(0, i);
    var baseURL = topURL.substr(0, topURL.lastIndexOf("/") + 1);   // "http://c:/base/start.htm" --> "http://c:/base/"
    return baseURL + fileName;
  }

  function ShowUrlBox(rightURL)
  {
    var origUrl = rightURL;
    var gotoUrl = ExpandFilename("hh_goto.htm");
    var sBase = gotoUrl.substr(0, gotoUrl.lastIndexOf("/") + 1);   // "http://c:/base/goto.htm" --> "http://c:/base/"

    rightURL = TrimURL(rightURL);     // "http://c:/base/" --> "c:/base/dir/page.htm"
    sBase = TrimURL(sBase);           // "http://c:/base/" --> "c:/base/"
    if (rightURL.indexOf(sBase) >= 0)
      rightURL = rightURL.substr(sBase.length, rightURL.length); // "c:/base/dir/page.htm" --> "dir/page.htm" 
    else
      rightURL = origUrl; // a URL on another domain or directory system

    //create full goto full URL. The bookmark allows goto.htm to set the right frame. 
    //Using hh_goto.htm works where hh_start.htm usually wont update.
    var parentFName = GetTopPage();
    if (parentFName !== "")
      parentFName = "?" + parentFName;
    var url=gotoUrl + parentFName + "#"+ rightURL;  //pass the full relative path using ?topFilePath#RightFramePath 

    //Show URL in prompt and give option to goto the URL
    url = prompt("Absolute address. Click OK to load this URL in the browser", url);  
    if (url != "" && url != null)
      top.location.href= url  ;    //rwc:new .. added +TopFilename
  }

  function GetFullLink(){
    if (!RightFrameFound())  // Can't see the right frame -- Use the current TOC selection
    {
      var el = findLinkNode();
      if (el != null && el != undefined)
        ShowUrlBox(el.getAttribute('href'));
      else
        alert("Please select a Table of Contents item."); 
      return;
    }
 
    var rightURL = SyncDocUrl(true);
    if (rightURL != "")  {
      ShowUrlBox(rightURL);
    }
  }

  function DoTocNext(fwd) { 
    var aref = selectNext(fwd); 
    if (aref != null && aref != undefined && aref != "") 
       top.right.location.href = aref;
  } 

  function DoTocSync(showError) { 
    var url = "" 

    // 2013-11-01 -- Sync at startup AND could not get sync url? -- 
    // We now pass in the right pane url via the left frame bookmark 
    if (!showError) { 
      url = ExpandFilename(window.location.hash.substring(1));
    }

    if (url === "")
      url = SyncDocUrl(showError);

    if (url !== "") 
       syncTree(url); 
    else if (treeSelected == null) // nothing selected
       selectNext(true);  //select first node
  } 

  function OnLoadCode() {
    window.onresize=resizeTree;
    resizeTree();
    DoTocSync(false);
  }

  function KeyDownEvent(event) {
    if ((event.which && event.which==13) || (event.keyCode && event.keyCode==13)) {  // Return
      var node = findLinkNode();
      if (node != null && node != undefined && node != "") 
      {
        aref = node.getAttribute('href');
        if (aref != null && aref != undefined && aref != "") 
          top.right.location = aref;
      }
    }
    else if ((event.which && event.which==40) || (event.keyCode && event.keyCode==40)) { //down arrow
      selectNext(true);
    }
    else if ((event.which && event.which==38) || (event.keyCode && event.keyCode==38)) { //up arrow
      selectNext(false);
    }

    return(true); //do not gobble keypress 
  }
  -->
  </script>


</head>

<body id="docBody" style="color:black;margin:5px 0px 0px 0px;" 
  onkeydown="javascript:return(KeyDownEvent(event));"
  onload="OnLoadCode()" onselectstart="return false;">


<div style="display: inline; white-space: nowrap; margin: 0px 0px 0px 5px;">
<input
 type="button" value="Contents" onclick="javascript:location.href='hh_toc.htm';"
 name="HelpTopics"><input
 type="button" value="Search" onclick="javascript:location.href='hh_search.htm';"
 name="Search">
</div>


<div align="right" style="margin:3px 8px 5px 3px;">
   <span title="Get absolute address of current page"
      style="cursor: pointer; font-size: 8pt; font-family: verdana,arial,sans-serif;"
      onmouseover="this.style.textDecoration='underline'"
      onmouseout="this.style.textDecoration='none'"
      onclick="GetFullLink();">Get Link</span>
|
   <span title="Sync table of contents to current page"
      style="cursor: pointer; font-size: 8pt; font-family: verdana,arial,sans-serif;"
      onmouseover="this.style.textDecoration='underline'"
      onmouseout="this.style.textDecoration='none'"
      onclick="DoTocSync(true);">Sync TOC</span>
|
   <span title="Previous Page"
      style="cursor: pointer; font-size: 8pt; font-family: verdana,arial,sans-serif;"
      onmouseover="this.style.textDecoration='underline'"
      onmouseout="this.style.textDecoration='none'"
      onclick="DoTocNext(false);">&lt;&lt;</span>
|
   <span title="Next Page"
      style="cursor: pointer; font-size: 8pt; font-family: verdana,arial,sans-serif;"
      onmouseover="this.style.textDecoration='underline'"
      onmouseout="this.style.textDecoration='none'"
      onclick="DoTocNext(true);">&gt;&gt;</span>
</div>

    <div id="tree" style="top: 35px; left: 0px;" class="treeDiv">
      <div id="treeRoot" onselectstart="return false" ondragstart="return false">
        <div class="treeNode">
          <img src="treenodeplus.gif" class="treeLinkImage" onclick="expandCollapse(this.parentNode)" alt="">
          <a href="GUID-A54708E1-EAD3-4A36-978E-383ED7BD97E8.html" target="right" class="treeUnselected" onclick="clickAnchor(this)">Tutorial:&#xA;&#x9; Analyzing Disk Input/Output Waits - C++ Sample Code</a>
          <div class="treeSubnodesHidden">
            <div class="treeNode">
              <img src="treenodedot.gif" class="treeNoLinkImage" alt="">
              <a href="GUID-667008D9-1F25-4B94-9573-A1D855E7D9FC.html" target="right" class="treeUnselected" onclick="clickAnchor(this)">Legal Information</a>
            </div>
            <div class="treeNode">
              <img src="treenodedot.gif" class="treeNoLinkImage" alt="">
              <a href="GUID-D2009DFB-FDD0-41CC-B9CD-D273822AB964.html" target="right" class="treeUnselected" onclick="clickAnchor(this)">Navigation Quick Start</a>
            </div>
            <div class="treeNode">
              <img src="treenodeplus.gif" class="treeLinkImage" onclick="expandCollapse(this.parentNode)" alt="">
              <a href="GUID-3B2AF07D-354E-46E1-8D52-1CD085196368.html" target="right" class="treeUnselected" onclick="clickAnchor(this)">Analyzing Disk Input and Output Waits</a>
              <div class="treeSubnodesHidden">
                <div class="treeNode">
                  <img src="treenodedot.gif" class="treeNoLinkImage" alt="">
                  <a href="GUID-C8E9B2A9-BC1D-486A-AC85-3514B04CA6DC.html" target="right" class="treeUnselected" onclick="clickAnchor(this)">Prepare Your App for Analysis</a>
                </div>
                <div class="treeNode">
                  <img src="treenodedot.gif" class="treeNoLinkImage" alt="">
                  <a href="GUID-E0B22255-231F-441D-A780-7DF1B4890751.html" target="right" class="treeUnselected" onclick="clickAnchor(this)">Configure and Run Disk I/O Analysis</a>
                </div>
                <div class="treeNode">
                  <img src="treenodedot.gif" class="treeNoLinkImage" alt="">
                  <a href="GUID-47820606-91EB-4C40-BA60-D199275D0ACF.html" target="right" class="treeUnselected" onclick="clickAnchor(this)">Analyze I/O Data in the System Cache&#xA;&#x9; Mode</a>
                </div>
                <div class="treeNode">
                  <img src="treenodedot.gif" class="treeNoLinkImage" alt="">
                  <a href="GUID-719E2E6E-F030-436D-AD8E-C6A5997E9C4B.html" target="right" class="treeUnselected" onclick="clickAnchor(this)">Analyze I/O Data in the System Cache and User&#xA;&#x9; Buffer Mode</a>
                </div>
                <div class="treeNode">
                  <img src="treenodedot.gif" class="treeNoLinkImage" alt="">
                  <a href="GUID-479FC274-6388-449D-8071-501125B38C9D.html" target="right" class="treeUnselected" onclick="clickAnchor(this)">Analyze I/O Data in the Synchronous User Buffer&#xA;&#x9; Mode</a>
                </div>
                <div class="treeNode">
                  <img src="treenodedot.gif" class="treeNoLinkImage" alt="">
                  <a href="GUID-75792C88-E171-4CF5-A2BE-81CEDD73DD04.html" target="right" class="treeUnselected" onclick="clickAnchor(this)">Analyze I/O Data in the Asynchronous User&#xA;&#x9; Buffer Mode</a>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="treeNode">
          <img src="treenodedot.gif" class="treeNoLinkImage" alt="">
          <a href="GUID-17F8AD4C-735E-4BCF-9A75-6AA90109BA50.html" target="right" class="treeUnselected" onclick="clickAnchor(this)">Summary</a>
        </div>
        <div class="treeNode">
          <img src="treenodedot.gif" class="treeNoLinkImage" alt="">
          <a href="GUID-A2E96D11-0086-4A5F-8B2D-5736FDCD2889.html" target="right" class="treeUnselected" onclick="clickAnchor(this)">Key Terms</a>
        </div>
      </div>

    </div>



</body>
</html>
